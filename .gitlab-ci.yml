image: node:20-alpine

stages:
  - build
  - publish

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

# Install pnpm
before_script:
  - apk add --no-cache git openssh-client
  - npm install -g pnpm
  - pnpm config set store-dir .pnpm-store

# Build job
build:
  stage: build
  script:
    - pnpm install
    - pnpm lint || echo "Lint issues found but continuing build"
    - pnpm build
  artifacts:
    paths:
      - dist/
    expire_in: 1 day
  only:
    - tags

# Publish job - commits dist folder to another repository
publish:
  stage: publish
  dependencies:
    - build
  script:
    # Configure Git
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"

    # Configure SSH for GitLab
    - mkdir -p ~/.ssh
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts

    # Clone the destination repository (same GitLab)
    - git clone git@gitlab.com:${TARGET_REPO_PATH}.git target_repo

    # Copy dist folder
    - cp -r dist/* target_repo/

    # Commit and push
    - cd target_repo
    - git add .
    - git commit -m "Update build from ${CI_COMMIT_TAG}" || echo "No changes to commit"
    - git tag -a "${CI_COMMIT_TAG}" -m "Release ${CI_COMMIT_TAG}"
    - git push origin master
    - git push origin "${CI_COMMIT_TAG}"
  only:
    - tags
